# Docker Compose для запуска mock AI-сервиса с тестовыми метриками
# Использование: docker-compose -f docker-compose-mock.yml up

networks:
  kong-net:
    driver: bridge

services:
  # Mock AI Service - генерирует тестовые метрики без реального AI
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile.mock
    container_name: ai-service-mock
    environment:
      METRICS_PORT: 1234
    ports:
      - "1234:1234"  # Порт для метрик Prometheus
    networks:
      - kong-net
    restart: unless-stopped

  # Prometheus - Сервис для сбора метрик
  prometheus:
    image: prom/prometheus:v2.42.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"  # Prometheus UI
    networks:
      - kong-net
    restart: always
    depends_on:
      - ai-service

  # Loki - Сервис для сбора и хранения логов
  loki:
    image: grafana/loki:2.5.0
    container_name: loki
    command: -config.file=/etc/loki/loki-config.yml
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yml:/etc/loki/loki-config.yml
    networks:
      - kong-net
    restart: always

  # Grafana - Сервис для визуализации метрик
  grafana:
    image: grafana/grafana:8.5.0
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"
    volumes:
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    ports:
      - "3000:3000"  # Grafana UI
    networks:
      - kong-net
    restart: always
    depends_on:
      - prometheus
      - loki
